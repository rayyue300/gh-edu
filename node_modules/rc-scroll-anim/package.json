{
  "_args": [
    [
      {
        "raw": "rc-scroll-anim",
        "scope": null,
        "escapedName": "rc-scroll-anim",
        "name": "rc-scroll-anim",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/rayyue300/react-whedu-201710"
    ]
  ],
  "_from": "rc-scroll-anim@latest",
  "_id": "rc-scroll-anim@1.0.7",
  "_inCache": true,
  "_location": "/rc-scroll-anim",
  "_nodeVersion": "6.11.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/rc-scroll-anim-1.0.7.tgz_1499654040971_0.510627365205437"
  },
  "_npmUser": {
    "name": "jljsj33",
    "email": "155259966@qq.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "rc-scroll-anim",
    "scope": null,
    "escapedName": "rc-scroll-anim",
    "name": "rc-scroll-anim",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/rc-scroll-anim/-/rc-scroll-anim-1.0.7.tgz",
  "_shasum": "4658047e4562372ba815b02f11f4769703e92f10",
  "_shrinkwrap": null,
  "_spec": "rc-scroll-anim",
  "_where": "/Users/rayyue300/react-whedu-201710",
  "author": {
    "name": "155259966@qq.com"
  },
  "bugs": {
    "url": "https://github.com/react-component/scroll-anim/issues"
  },
  "config": {
    "port": 8020
  },
  "dependencies": {
    "babel-runtime": "6.x",
    "prop-types": "^15.5.10",
    "raf": "3.x",
    "rc-tween-one": "~1.2.5",
    "tween-functions": "1.x"
  },
  "description": "scroll-anim anim component for react",
  "devDependencies": {
    "expect.js": "0.3.x",
    "pre-commit": "1.x",
    "rc-animate": "2.x",
    "rc-queue-anim": "^1.0.1",
    "rc-tools": "5.x",
    "react": "~15.5.0",
    "react-addons-test-utils": "~15.5.0",
    "react-dom": "~15.5.0"
  },
  "directories": {},
  "dist": {
    "shasum": "4658047e4562372ba815b02f11f4769703e92f10",
    "tarball": "https://registry.npmjs.org/rc-scroll-anim/-/rc-scroll-anim-1.0.7.tgz"
  },
  "entry": {
    "rc-scroll-anim": [
      "./assets/index.less",
      "./src/index.js"
    ]
  },
  "files": [
    "lib",
    "assets/*.css",
    "dist"
  ],
  "gitHead": "422b7c67135cb996c397bb17e360eb617e6bee41",
  "homepage": "https://github.com/react-component/scroll-anim",
  "keywords": [
    "react",
    "react-component",
    "react-scroll-anim",
    "scroll-anim"
  ],
  "licenses": "MIT",
  "main": "./lib/index",
  "maintainers": [
    {
      "name": "jljsj33",
      "email": "155259966@qq.com"
    }
  ],
  "name": "rc-scroll-anim",
  "optionalDependencies": {},
  "pre-commit": [
    "lint"
  ],
  "readme": "# rc-scroll-anim\n---\n\nReact ScrollAnim Component\n\n\n[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n[![gemnasium deps][gemnasium-image]][gemnasium-url]\n[![node version][node-image]][node-url]\n[![npm download][download-image]][download-url]\n\n[npm-image]: http://img.shields.io/npm/v/rc-scroll-anim.svg?style=flat-square\n[npm-url]: http://npmjs.org/package/rc-scroll-anim\n[travis-image]: https://img.shields.io/travis/react-component/scroll-anim.svg?style=flat-square\n[travis-url]: https://travis-ci.org/react-component/scroll-anim\n[coveralls-image]: https://img.shields.io/coveralls/react-component/scroll-anim.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/r/react-component/scroll-anim?branch=master\n[gemnasium-image]: http://img.shields.io/gemnasium/react-component/scroll-anim.svg?style=flat-square\n[gemnasium-url]: https://gemnasium.com/react-component/scroll-anim\n[node-image]: https://img.shields.io/badge/node.js-%3E=_0.10-green.svg?style=flat-square\n[node-url]: http://nodejs.org/download/\n[download-image]: https://img.shields.io/npm/dm/rc-scroll-anim.svg?style=flat-square\n[download-url]: https://npmjs.org/package/rc-scroll-anim\n\n\n## Browser Support\n\n|![IE](https://raw.github.com/alrra/browser-logos/master/internet-explorer/internet-explorer_48x48.png) | ![Chrome](https://raw.github.com/alrra/browser-logos/master/chrome/chrome_48x48.png) | ![Firefox](https://raw.github.com/alrra/browser-logos/master/firefox/firefox_48x48.png) | ![Opera](https://raw.github.com/alrra/browser-logos/master/opera/opera_48x48.png) | ![Safari](https://raw.github.com/alrra/browser-logos/master/safari/safari_48x48.png)|\n| --- | --- | --- | --- | --- |\n| IE 8+ ✔ | Chrome 31.0+ ✔ | Firefox 31.0+ ✔ | Opera 30.0+ ✔ | Safari 7.0+ ✔ |\n\n\n## Development\n\n```\nnpm install\nnpm start\n```\n\n## Example\n\nhttp://localhost:8020/examples/ \n\nhttp://react-component.github.io/scroll-anim/\n\nhttp://ant.design/\n\n\n## Feature\n\n* support ie8,ie8+,chrome,firefox,safari\n\n## install\n\n[![rc-scroll-anim](https://nodei.co/npm/rc-scroll-anim.png)](https://npmjs.org/package/rc-scroll-anim)\n\n\n## Usage\n\n#### ScrollOverPack \n```js\nvar ScrollAnim = require('rc-scroll-anim');\nvar ScrollOverPack = ScrollAnim.OverPack;\nvar React = require('react');\n\n// ScrollOverPack support rc-animate,rc-queue-anim,rc-tween-one;\n\nReact.render(<ScrollOverPack>\n  <QueueAnim key='queueAnim'>\n    <div key='a'>enter</div>\n    <div key='b'>enter</div>\n    <div key='b'>enter</div>\n  </QueueAnim>\n  <TweenOne key='tweenOne' vars={{x:100}}>one element</TweenOne>\n  <Animate key='rc-animate' transitionName=\"fade\" transitionAppear>rc-animate</Animate>\n</ScrollOverPack>, container);\n```\n#### Parallax\n\n```js\nvar ScrollParallax = ScrollAnim.Parallax;\nReact.render(<ScrollParallax vars={{x:100}}>Parallax</ScrollParallax>,container);\n```\n\n#### Link, Element\n\n```js\nvar Link = ScrollAnim.Link;\nvar Element = ScrollAnim.Element;\nReact.render(<div>\n  <div className=\"nav\">\n    <Link className=\"nav-list\" to=\"page0\">nav0</Link>\n    <Link className=\"nav-list\" to=\"page1\">nav1</Link>\n  </div>\n  <Element className=\"pack-page\" id=\"page0\">demo</Element>\n  <Element className=\"pack-page\" id=\"page1\">demo</Element>\n</div>,container);\n```\n\n### scrollScreen\n\n```js\nScrollAnim.scrollScreen.init();\nScrollAnim.scrollScreen.unMount();\n```\n\n## API\n\n<a href='https://motion.ant.design/api/scroll-anim' target='_blank'>中文文档</a>\n\n### props\n\n### Element \n\n> `Element` or `OverPack` must set height;\n\n| name      | type           | default | description    |\n|-----------|----------------|---------|----------------|\n| component | string         | `div`   | -            |\n| id | string         | null    | need to location the id，parallax the `location` or link the `to`, need to use |\n| targetId  |  string        | null    |  scroll target id, if don't window scroll, parent element is `overflow: scroll`, use parent id to do scroll; [demo refs](http://react-component.github.io/scroll-anim/examples/target.html) |\n| playScale | number / array / string       | `0.5`   | percentage of screen to start play, screen center is 0.5, if replay is true : [bottomEnter, topLeave]， topLeave >= bottomEnter |\n| onChange  | func           | null     | change callback({ mode, scrollName }); mode: `enter` or `leave` |\n| location  | string         | null     |  v0.6.0 above have,location, the parent id; |\n\n> Note: if the element is not the above component, you need to location this element; please use the `Element`\n\n### OverPack \n\nOverPack inherit Element; `component` `playScale` `onChange` `location` refer to  `Element`;\n\n> 1.0.0 remove hideProps;\n\n| name      | type           | default | description    |\n|-----------|----------------|---------|----------------|\n| always    | boolean        | `true`  | back to top, enter replay，as `false` will only play it again, leave does not play |\n| replay    | boolean        | `false` | play every enter, do you want to animate each time you show the current, `false` only scroll to down play animate |\n| appear | boolean         | `true`  | whether support appear the operation |\n\n### Parallax\n| name      | type           | default | description    |\n|-----------|----------------|---------|----------------|\n| animation      | object / array | `null`  | animation data     |\n| location  | string         | `null`  | location, the parent id |\n| always    | boolean        | `true`  | -            |\n| component | string         | `div`   | -            |\n\n#### animation = { }\n| name      | type           | default | description    |\n|-----------|----------------|---------|----------------|\n| playScale | array          | `[0, 1]`| play area, [start, end]<br/> timeline: `[{playScale: [0, 0.2]}, {playScale: [0, 0.8]}]]`, Second will increase by 0.2, The second end is 1  |\n| ease      | string         | `easeInOutQuad`| animation easing string |\n| onUpdate  | function       |    -    |  animate updates, callback: onUpdate(easeValue})   |\n| onStart   | function       |    -    |  scroll down animate start (playScale[0]) callback; |\n| onComplete| function       |    -    |  scroll down animate completed (playScale[1]) callback |\n| onStartBack   | function       |    -    |   scroll up animate start (playScale[1]) callback; |\n| onCompleteBack | function       |    -    |   scroll up animate completed (playScale[0]) callback; |\n\n> animation = [{},{}] is timeline;\n\n### Link\n| name      | type           | default | description    |\n|-----------|----------------|---------|----------------|\n| to  | string         | `null`  | need; Specifies the element to top; `Element` the id  |\n| toHash | boolean     | true    | add `to` to the `location.hash` |\n| duration  | number         | `450`   | scroll animate duration |\n| ease      | string         | `easeInOutQuad` | animation easing string | \n| active    | string         | `active`| selected className  |\n| showHeightActive| string / number / array | `50%` | enter: the element offset top `50%` add `active`, leave: the element in the window `50%` remove `active`; is array [enter, leave]; |\n| toShowHeight | boolean     | false   | scroll to `showHeightActive` |\n| offsetTop |  number        |  0      | scroll to elem top offset   |\n| onFocus   | func           | null    | check callback,onFocus({target,to}) |\n| onBlur    | func           | null    | blur callback |\n| onAsynchronousAddEvent | func | null | Asynchronous add onScroll; callback(function) [refs](http://react-component.github.io/scroll-anim/examples/linkAsynchronous.html) |\n| component | string         | `div`   | -            |\n\n### ScrollAnim.scrollScreen.init(vars)\nUse: scroll a screen window;\n\n#### vars = { }\n\n| name      | type           | default | description    |\n|-----------|----------------|---------|----------------|\n| duration  | number         | 450     | scroll duration   |\n| ease      | string         | `easeInOutQuad` | easing |\n| docHeight | number         | null    | default to HTML height, when body or html the height: 100%, page height can not be obtained, need their own definition |\n| loop      | boolean        | false   | Before and after the phase cycle  |\n| scrollInterval | number    | 1000    | rolling interval time |\n\n### ScrollAnim.scrollScreen.unMount()\n\nClear a screen scrolling effect;\n\n### Event \n```jsx\nvar Event = ScrollAnim.Event;\nEvent.addEventListener('scroll.xxxx',func);\nEvent.removeEventListener('scroll.xxx',func);\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/react-component/scroll-anim.git"
  },
  "scripts": {
    "build": "rc-tools run build",
    "chrome-test": "rc-tools run chrome-test",
    "coverage": "rc-tools run coverage",
    "gh-pages": "rc-tools run gh-pages",
    "karma": "rc-tools run karma",
    "lint": "rc-tools run lint",
    "pub": "rc-tools run pub --babel-runtime",
    "saucelabs": "rc-tools run saucelabs",
    "start": "rc-tools run server",
    "test": "rc-tools run test"
  },
  "version": "1.0.7"
}
